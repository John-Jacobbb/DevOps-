Got it! Let's simplify this into easy, clear steps using just VS Code + Jenkins + GitHub.

🧪 Goal: Run a Flask app and set up CI/CD using Jenkins
All from VS Code.

✅ What You’ll Do (Only 5 Simple Steps):
1️⃣ Unzip the Project in VS Code
Download and unzip this file:
👉 jenkins-flask-demo.zip

Open VS Code → File → Open Folder → Select the unzipped folder.

2️⃣ Run the Flask App (Check it works)
Open the VS Code terminal.

Run:

bash
Copy
Edit
pip install -r requirements.txt
python app.py
Visit this URL in browser:
👉 http://localhost:5000

You’ll see: Hello, Jenkins CI/CD!

3️⃣ Push Project to GitHub
Go to https://github.com → Create a new repository (e.g., jenkins-flask-demo)

In VS Code terminal, run:

bash
Copy
Edit
git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin https://github.com/YOUR_USERNAME/jenkins-flask-demo.git
git push -u origin main
Now your code is on GitHub 🎉

4️⃣ Start Jenkins (in browser)
🐳 Easiest: Use Docker (run in VS Code terminal)
bash
Copy
Edit
docker run -p 8080:8080 -p 50000:50000 --name jenkins \
  -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts
Then go to: 👉 http://localhost:8080

First time setup:

Run this to get the password:

bash
Copy
Edit
docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
Paste it in Jenkins, click "Install Suggested Plugins"

Finish setup with admin account

5️⃣ Create a Jenkins Pipeline Job
In Jenkins:

Click New Item

Name: flask-pipeline

Select Pipeline, click OK

In the job:

Scroll to Pipeline Section

Set:

Definition: Pipeline script from SCM

SCM: Git

Repository URL:
https://github.com/YOUR_USERNAME/jenkins-flask-demo.git

Click Save

Click Build Now → ✅ Done!

You now have:

Flask app running ✅

Code in GitHub ✅

Jenkins pipeline working ✅

Would you like me to show how to make Jenkins build automatically every time you push code?
